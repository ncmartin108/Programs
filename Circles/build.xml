<!--Ant build file for running CircleTests under JUnit
     Jonathan Cook, 17 Sep 2015; modified Z O. Toups, July 2020; 
	 modified by N. Chumacero-Martin December 2020 using code from: 
     https://www.eclemma.org/jacoco/trunk/doc/examples/build/build.xml
     Some components
        Copyright (c) 2009, 2020 Mountainminds GmbH & Co. KG and Contributors
        This program and the accompanying materials are made available under
        the terms of the Eclipse Public License 2.0 which is available at
        http://www.eclipse.org/legal/epl-2.0

        SPDX-License-Identifier: EPL-2.0

        Contributors:
            Marc R. Hoffmann - initial API and implementation -->
<project name="CircleTests" default="test">
	
	<!-- directory configuration - if things are not working, start troubleshooting from here -->
	<property name="src.dir" location="src/" />
	<property name="build.dir" location="bin/" />
	<property name="junit.dir" location="lib/junit-4.13.1.jar" />
	<property name="hamcrest.dir" location="lib/hamcrest-core-1.3.jar" />
	<property name="test.dir" location="test/" />

	<!-- Cleans up by removing all generated files; do "ant clean" to start afresh -->
	<target name="clean">
		<delete>
			<fileset dir="." includes="**/*.class" />
		</delete>
		<delete dir="${test.dir}" />
	</target>
	
	<!-- standard compile task, but turn debugging on for source viewing -->
	<target name="compile" description="compile the source">
		<mkdir dir="${build.dir}" />
		<javac 
			srcdir="${src.dir}" 
			destdir="${build.dir}" 
			includeantruntime="false" 
			debug="true">
			<classpath>
				<pathelement path="${junit.dir}"/>
			</classpath>
			<classpath>
				<pathelement path="${hamcrest.dir}"/>
			</classpath>
		</javac>
	</target>
	
	<!-- Used to run CircleRun as a standalone class -->
	<target name="run" description="Run the main method in CircleRun" depends="compile">
		<java fork = "true" failonerror = "yes" classname="edu.nmsu.cs.circles.CircleRun">
			<classpath path="${build.dir}" />
			<classpath path="${junit.dir}" />
			<classpath path="${hamcrest.dir}" />
			<arg value="10" />
			<arg value="9" />
			<arg value="8" />
			<arg value="7" />
			<arg value="6" />
			<arg value="5" />
		</java>
	</target>
	
	<!-- Run JUnit Tests on Circle1 -->
	<target name="testCircle1" depends="compile">
		<mkdir dir="${test.dir}" />
		
		<junit printsummary="yes" haltonfailure="no">
			<classpath location="${build.dir}" />
			<classpath location="${junit.dir}" />
			<classpath location="${hamcrest.dir}" />
			
			<test name="edu.nmsu.cs.circles.Circle1Test" haltonfailure="no" todir="${test.dir}" outfile="result1">
				<formatter type="plain" />
				<formatter type="xml" />
			</test>
			
		</junit>
	</target>
	
	<!-- Run JUnit Tests on Circle2 -->
	<target name="testCircle2" depends="compile">
		<mkdir dir="${test.dir}" />
		
		<junit printsummary="yes" haltonfailure="no">
			<classpath location="${build.dir}" />
			<classpath location="${junit.dir}" />
			<classpath location="${hamcrest.dir}" />
			
			<test name="edu.nmsu.cs.circles.Circle2Test" haltonfailure="no" todir="${test.dir}" outfile="result2">
				<formatter type="plain" />
				<formatter type="xml" />
			</test>
			
		</junit>
	</target>
	
	<!-- Run JUnit Tests on Both Circle1 anc Circle2 -->
	<target name="test" depends="compile,testCircle1,testCircle2">
	</target>
	
</project>
